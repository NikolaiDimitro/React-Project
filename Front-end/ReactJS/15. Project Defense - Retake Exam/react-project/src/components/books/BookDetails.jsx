import { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { getBookById, isBookLiked, toggleBookLike, updateBookLikes, deleteBook } from '../../services/bookService';
import './BookDetails.css';

const BookDetails = () => {
    const { id } = useParams();
    const navigate = useNavigate();
    const { currentUser } = useAuth();
    const [book, setBook] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    const [isLiked, setIsLiked] = useState(false);
    const [likes, setLikes] = useState(0);
    const [isOwner, setIsOwner] = useState(false);

    useEffect(() => {
        const fetchBook = async () => {
            try {
                const bookData = await getBookById(id);
                if (bookData) {
                    setBook(bookData);
                    if (currentUser) {
                        const liked = await isBookLiked(id, currentUser.uid);
                        setIsLiked(liked);
                        const { likes: bookLikes } = await updateBookLikes(id, currentUser.uid);
                        setLikes(bookLikes);
                        setIsOwner(currentUser.uid === bookData.ownerId);
                    }
                } else {
                    setError('–ö–Ω–∏–≥–∞—Ç–∞ –Ω–µ –±–µ—à–µ –Ω–∞–º–µ—Ä–µ–Ω–∞');
                }
            } catch (err) {
                setError('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ—Ç–æ –Ω–∞ –∫–Ω–∏–≥–∞—Ç–∞');
                console.error('Error fetching book:', err);
            } finally {
                setLoading(false);
            }
        };

        fetchBook();
    }, [id, currentUser]);

    const handleLike = async () => {
        if (!currentUser || !currentUser.uid) {
            if (window.confirm('–ú–æ–ª—è, –≤–ª–µ–∑—Ç–µ –≤ –ø—Ä–æ—Ñ–∏–ª–∞ —Å–∏, –∑–∞ –¥–∞ —Ö–∞—Ä–µ—Å–∞—Ç–µ –∫–Ω–∏–≥–∞. –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –±—ä–¥–µ—Ç–µ –ø—Ä–µ–Ω–∞—Å–æ—á–µ–Ω–∏ –∫—ä–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –∑–∞ –≤—Ö–æ–¥?')) {
                navigate('/login');
            }
            return;
        }

        if (isOwner) {
            alert('–ù–µ –º–æ–∂–µ—Ç–µ –¥–∞ —Ö–∞—Ä–µ—Å–∞—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–∞—Ç–∞ —Å–∏ –∫–Ω–∏–≥–∞');
            return;
        }

        try {
            const newLikeStatus = await toggleBookLike(id, currentUser.uid);
            setIsLiked(newLikeStatus);
            setLikes(prev => newLikeStatus ? prev + 1 : prev - 1);
        } catch (error) {
            console.error('Error toggling like:', error);
            alert('–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ö–∞—Ä–µ—Å–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∫–Ω–∏–≥–∞—Ç–∞. –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.');
        }
    };

    const handleDelete = async () => {
        if (!currentUser || currentUser.uid !== book.ownerId) {
            alert('–ù—è–º–∞—Ç–µ –ø—Ä–∞–≤–∞ –¥–∞ –∏–∑—Ç—Ä–∏–µ—Ç–µ —Ç–∞–∑–∏ –∫–Ω–∏–≥–∞');
            return;
        }

        if (window.confirm('–°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ –∏–∑—Ç—Ä–∏–µ—Ç–µ —Ç–∞–∑–∏ –∫–Ω–∏–≥–∞?')) {
            try {
                await deleteBook(id);
                navigate('/catalog');
            } catch (error) {
                console.error('Error deleting book:', error);
                alert('–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∫–Ω–∏–≥–∞—Ç–∞');
            }
        }
    };

    if (loading) {
        return <div className="loading">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</div>;
    }

    if (error) {
        return <div className="error">{error}</div>;
    }

    if (!book) {
        return <div className="not-found">–ö–Ω–∏–≥–∞—Ç–∞ –Ω–µ –±–µ—à–µ –Ω–∞–º–µ—Ä–µ–Ω–∞</div>;
    }

    return (
        <div className="book-details">
            <div className="book-header">
                <h1>{book.title}</h1>
                <div className="book-actions">
                    {!isOwner && (
                        <button 
                            className={`like-button ${isLiked ? 'liked' : ''}`}
                            onClick={handleLike}
                        >
                            {isLiked ? '‚ù§Ô∏è' : 'ü§ç'} {likes}
                        </button>
                    )}
                    {currentUser && currentUser.uid === book.ownerId && (
                        <>
                            <button 
                                className="edit-button"
                                onClick={() => navigate(`/books/${id}/edit`)}
                            >
                                –†–µ–¥–∞–∫—Ç–∏—Ä–∞–π
                            </button>
                            <button 
                                className="delete-button"
                                onClick={handleDelete}
                            >
                                –ò–∑—Ç—Ä–∏–π
                            </button>
                        </>
                    )}
                </div>
            </div>
            <div className="book-content">
                <img src={book.imageUrl} alt={book.title} className="book-image" />
                <div className="book-info">
                    <p><strong>–ê–≤—Ç–æ—Ä:</strong> {book.author}</p>
                    <p><strong>–ñ–∞–Ω—Ä:</strong> {book.genre}</p>
                    <p><strong>–ì–æ–¥–∏–Ω–∞:</strong> {book.year}</p>
                    <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {book.description}</p>
                </div>
            </div>
        </div>
    );
};

export default BookDetails; 